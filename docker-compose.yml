version: '3.9'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: filmhub
      POSTGRES_USER: filmhub
      POSTGRES_PASSWORD: filmhub
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  web:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=filmhub.settings
      - DATABASE_URL=postgres://filmhub:filmhub@db:5432/filmhub
      - REDIS_URL=redis://redis:6379/0

  worker:
    build: ./backend
    command: celery -A filmhub worker --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=filmhub.settings
      - DATABASE_URL=postgres://filmhub:filmhub@db:5432/filmhub
      - REDIS_URL=redis://redis:6379/0

  celery:
    build: ./backend
    command: celery -A filmhub beat --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=filmhub.settings
      - DATABASE_URL=postgres://filmhub:filmhub@db:5432/filmhub
      - REDIS_URL=redis://redis:6379/0

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      # This prevents the local node_modules from overwriting the container's
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - web

volumes:
  postgres_data:
